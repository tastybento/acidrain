/*******************************************************************************
 * This file is part of ASkyBlock.
 *
 *     ASkyBlock is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU General Public License as published by
 *     the Free Software Foundation, either version 3 of the License, or
 *     (at your option) any later version.
 *
 *     ASkyBlock is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU General Public License for more details.
 *
 *     You should have received a copy of the GNU General Public License
 *     along with ASkyBlock.  If not, see <http://www.gnu.org/licenses/>.
 *******************************************************************************/
package com.wasteofplastic.acidrain.listeners;

import org.bukkit.Material;
import org.bukkit.Sound;
import org.bukkit.block.Block;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.block.BlockFromToEvent;
import org.bukkit.scheduler.BukkitTask;

import com.wasteofplastic.acidrain.AcidRain;
import com.wasteofplastic.acidrain.Settings;

/**
 * @author tastybento
 * 
 */
public class LavaCheck implements Listener {
    BukkitTask task;
    private final AcidRain plugin;

    public LavaCheck(AcidRain aSkyBlock) {
        plugin = aSkyBlock;
    }

    /**
     * Removes stone generated by lava pouring onto water
     * 
     * @param e
     */
    @EventHandler(priority = EventPriority.LOWEST, ignoreCancelled = true)
    public void onCleanstoneGen(BlockFromToEvent e) {
        // Only do this in ASkyBlock world
        if (!AcidRain.getAcidRainWorlds().contains(e.getBlock().getWorld())) {
            return;
        }
        final Block to = e.getToBlock();
        // plugin.getLogger().info("From material is " + from.toString());
        // plugin.getLogger().info("To material is " + to.getType().toString());
        // plugin.getLogger().info("---------------------------------");
        if (Settings.acidDamage > 0) {
            final Material prev = to.getType();
            // plugin.getLogger().info("To material was " +
            // to.getType().toString());
            plugin.getServer().getScheduler().runTask(plugin, new Runnable() {
                @Override
                public void run() {
                    // plugin.getLogger().info("To material is after 1 tick " +
                    // to.getType().toString());
                    if ((prev.equals(Material.WATER) || prev.equals(Material.STATIONARY_WATER)) && to.getType().equals(Material.STONE)) {
                        to.setType(prev);
                        if (plugin.getServer().getVersion().contains("(MC: 1.8") || plugin.getServer().getVersion().contains("(MC: 1.7")) {
                            to.getWorld().playSound(to.getLocation(), Sound.valueOf("FIZZ"), 1F, 2F);
                        } else {
                            to.getWorld().playSound(to.getLocation(), Sound.ENTITY_CREEPER_PRIMED, 1F, 2F);
                        }
                    }
                }
            });
        }
    }
}